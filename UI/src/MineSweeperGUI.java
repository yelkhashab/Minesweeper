import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Scanner;

public class MineSweeperGUI extends JFrame {
    private static final String TITLE = "Minesweeper";

    private Game game;
    private JPanel mainPanel;
    private JButton lastButtonClicked;
    public int x = 1;
    public int y = 1;

    private Grid grid;
    private JButton[][] buttonGrid;
    private JButton restartGameButton;
    private JPanel panel1;

    //public Difficulty difficulty;
    public MineSweeperGUI(Difficulty diff) {
        super(TITLE);
        game = new Game(diff);
        $$$setupUI$$$();
        this.setSize(1000, 1000);

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(panel1);
        this.setVisible(true);
        this.getContentPane().setSize(1000, 1000);

        grid = new Grid(diff);
        this.buttonGrid = grid.getGrid();
        mainPanel.setLayout(new GridLayout(grid.height, grid.width));
        restartGameButton.setVisible(true);
        restartGameButton.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                grid = new Grid(diff);
                game.restart();
                JButton finalCol;
                for (JButton[] row : buttonGrid) {
                    for (JButton col : row) {
                        col = new JButton();
                        finalCol = col;
                        finalCol.setEnabled(true);
                    }
                }
            }
        });

        for (JButton[] row : buttonGrid) {
            for (JButton col : row) {
                col = new JButton();
                col.setVisible(true);
                col.setEnabled(true);
                col.setPreferredSize(new Dimension(40, 40));

                JButton finalCol = col;
                col.addActionListener(new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        finalCol.setEnabled(!finalCol.isEnabled());
                        lastButtonClicked = finalCol;
//                        for (int row = 0; row < grid.height; row++) {
//                            for (int col = 0; col < grid.width; col++) {
//                                if (buttonGrid[row][col] == e.getSource()) {
//                                    System.out.println("Hello");
//                                    x = row;
//                                    y = col;
//                                }
//                                // here you have your row and column
//                            }
//                        }
//
//                        System.out.println(x + " " + y);
//                        game.mousePressed(x, y);
//                        for (boolean[] row : game.revealed) {
//                            for (boolean col : row) {
//                                finalCol.setEnabled(!col);
//                            }
 //                       }
                    }
                });

                mainPanel.add(col);
            }
        }
    }

    public static void main(String args[]) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Which board size do you want to select: \nSmall \nMedium \nLarge");
        String diff = scan.nextLine();

        MineSweeperGUI gui = new MineSweeperGUI(new Difficulty(diff));

    }

//    private makeNewGrid() {
//
//    }

    /*public static void main(String[] args) {
        Thread thread = new Thread() {
            public void run() {
                new MineSweeperGUI(TITLE);
            }
        };

        thread.start();
    }*/


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        restartGameButton = new JButton();
        restartGameButton.setText("Restart Game");
        panel1.add(restartGameButton, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(mainPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    /*public void createGrid(){
        grid = new Grid(difficulty.getWidth(), difficulty.getHeight());
    */
}
